flowchart TB
  %% Actors / External
  User["Actor: User"]
  ProductSVG["Product: SVG/PNG Export"]
  InterfaceAPI["Interface: IAnalysisAPI (HTTP)"]

  %% Activity flow
  Start((Start))
  SelectRepo["Select repository\n(User selects repo)"]
  RequestAnalysis["Request analysis\n(Frontend → Backend)"]
  BackendCache["Backend: check cache\n(getFromCache)"]
  ParseRepo["Parser: analyze files\n(python-parser) - detectLanguage()"]
  BuildModel["Build normalized JSON model\n(toNormalizedJson())"]
  CacheResult["Backend: store cache result\n(saveToCache)"]
  ConvertMermaid["Frontend: convert JSON → Mermaid\n(renderDiagram)"]
  Render["Mermaid: render diagram in browser\n(IRenderer)"]
  Export["User: export/download SVG/PNG"]
  End((End))

  %% Flow with actors and interface
  User --> SelectRepo
  SelectRepo --> RequestAnalysis
  RequestAnalysis --> InterfaceAPI
  InterfaceAPI -- request --> BackendCache
  BackendCache -- cache hit --> ConvertMermaid
  BackendCache -- cache miss --> ParseRepo
  ParseRepo --> BuildModel
  BuildModel --> CacheResult
  CacheResult --> ConvertMermaid
  ConvertMermaid --> Render
  Render --> Export
  Export --> ProductSVG
  ProductSVG --> End

  %% Visual hints (dashed lines show implementation/realization)
  BackendCache -.-> InterfaceAPI
  ParseRepo -.-> BackendCache
  ConvertMermaid -.-> InterfaceAPI
