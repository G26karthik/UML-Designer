classDiagram
  %% Actors / External
  class User {
    <<Actor>>
    +selectRepository()
    +exportDiagram()
  }

  %% Frontend components
  class Frontend {
    +renderDiagram(chart)
    +requestAnalysis(repoUrl)
    +exportSVG()
  }
  class UI {
    +showControls()
    +showErrors()
  }

  %% Backend components and interfaces
  class Backend {
    +analyze(repoUrl)
    +getFromCache(key)
    +saveToCache(key, model)
  }
  class IAnalysisAPI {
    +analyze(repoUrl)
    +getStatus(jobId)
  }

  %% Parser / Product
  class Parser {
    +parseRepository(path)
    +detectLanguage(file)
    +toNormalizedJson()
  }
  class Product {
    +svg
    +png
    +mermaidSource
  }

  %% Relationships
  User --|> Frontend : uses
  Frontend *-- UI : contains
  Frontend --> IAnalysisAPI : calls
  IAnalysisAPI <|.. Backend : implements
  Backend --> Parser : invokes
  Backend o-- Product : produces
  Parser --|> Product : generates

  %% Notes
  classDiagram_note0 <|-- Product : "Exportable artifact"
